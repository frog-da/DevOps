name: Python App CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "app_python/**"
      - ".github/workflows/python_ci.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "app_python/**"
      - ".github/workflows/python_ci.yml"

  
  workflow_dispatch:

env:
  WORKING_DIR: app_python

jobs:
  test:
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./${{ env.WORKING_DIR }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: | 
          pytest
      - name: Snyk
        uses: snyk/actions/python-3.10@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
            --package-manager=pip
            --file=${{ env.WORKING_DIR }}/requirements.txt
            --skip-unresolved
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  build-and-publish:
    timeout-minutes: 30
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.WORKING_DIR }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/python_devops:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          